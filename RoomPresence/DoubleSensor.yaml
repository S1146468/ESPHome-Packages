substitutions:
    device:
        id: doubleSensor
    config:
        sensor_1: 
            entityId: binary_sensor.occupancy 
            timeout: 60s
            debugInternal: "true"
        sensor_2: 
            entityId: binary_sensor.occupancy 
            timeout: 60s
            debugInternal: "true"
    output:
        timeout: 30s
        icon: "mdi:sofa"


       

binary_sensor:
# ────────────────────────────────────────────────────────────────
# Input sensors imported from Home Assistant
# ────────────────────────────────────────────────────────────────
  - platform: homeassistant
    id: ${device.id}_occupancy_1
    entity_id: ${config.sensor_1.entityId}
    internal: true
    filters:
      - delayed_off: ${config.sensor_1.timeout}
    on_state_change: 
      then:
        - script.execute: ${device.id}_check_for_occupancy
        - binary_sensor.template.publish:
            id: ${device.id}_occupancy_debug_1
            state: !lambda 'return id(${device.id}_occupancy_1).state;'

  - platform: homeassistant
    id: ${device.id}_occupancy_2
    entity_id: ${config.sensor_2.entityId}
    internal: true
    filters:
      - delayed_off: ${config.sensor_2.timeout}
    on_state_change: 
      then:
        - script.execute: ${device.id}_check_for_occupancy
        - binary_sensor.template.publish:
            id: ${device.id}_occupancy_debug_2
            state: !lambda 'return id(${device.id}_occupancy_2).state;'
        
# ────────────────────────────────────────────────────────────────



# ────────────────────────────────────────────────────────────────
# Debug sensors exposed to Home Assistant
# ────────────────────────────────────────────────────────────────
  - platform: template
    id: ${device.id}_occupancy_debug_1
    device_id: ${device.id}
    name: "Occupancy Debug 1"
    device_class: occupancy
    entity_category: diagnostic
    internal: ${config.sensor_1.debugInternal}

  - platform: template
    id: ${device.id}_occupancy_debug_2
    device_id: ${device.id}
    name: "Occupancy Debug 2"
    device_class: occupancy
    entity_category: diagnostic
    internal: ${config.sensor_2.debugInternal}
# ────────────────────────────────────────────────────────────────



# ────────────────────────────────────────────────────────────────
# Virtual occupancy sensors exposed to Home Assistant
# ────────────────────────────────────────────────────────────────
  - platform: template
    id: ${device.id}_occupancy_output
    device_id: ${device.id}
    name: "Occupancy"
    device_class: occupancy
    icon: ${output.icon}
    filters:
      - delayed_off: ${output.timeout}
# ────────────────────────────────────────────────────────────────



script:
  - id: ${device.id}_check_for_occupancy
    then: 
      - lambda: |-
          if (id(${device.id}_occupancy_1).state == true) {
            id(${device.id}_occupancy_output).publish_state(true);
            return;
          }

          if (id(${device.id}_occupancy_2).state == true) {
            id(${device.id}_occupancy_output).publish_state(true);
            return;
          }

          id(${device.id}_occupancy_output).publish_state(false);

interval: 
  - id: ${device.id}_watchdog
    interval: 1min
    then: 
      - script.execute: ${device.id}_check_for_occupancy
      